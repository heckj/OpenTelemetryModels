name: CI

on: [push]

jobs:
  linux_build:
    runs-on: ubuntu-latest
    container:
      image: swift:5.2
      options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --security-opt apparmor=unconfined

    steps:
    - name: Checkout Project
      uses: actions/checkout@v1
      with:
        submodules: true

    - name: install protobuf 3.2 from source
      run: |
        apt-get update
        apt-get install -y wget curl unzip
        wget https://github.com/google/protobuf/archive/v3.2.0.tar.gz
        tar xzf v3.2.0.tar.gz
        cd protobuf-3.2.0/
        apt-get install -y autoconf automake libtool make
        ./autogen.sh
        ./configure CXXFLAGS=-I/usr/local/include LDFLAGS=-L/usr/local/lib
        make && make install

    - name: install swift-protobuf 1.8 from source
      run: |
        wget https://github.com/apple/swift-protobuf/archive/1.8.0.tar.gz
        tar xzf 1.8.0.tar.gz
        cd swift-protobuf-1.8.0
        make && make install

    - name: regenerate protobuf sources
      run: ./scripts/generate_sources.sh

    - name: build and test
      run: swift test --enable-test-discovery -v

      #- name: doctest the readme
      #run: swift doctest -p README.md

  macos_build:
    runs-on: macos-latest
    steps:
    - name: Checkout Project
      uses: actions/checkout@v1

    - name: Switch to Xcode 11
      run: sudo xcode-select -s /Applications/Xcode_11.4.app

    - name: generate xcode project for xcodebuild
      run: swift package generate-xcodeproj

    - name: Show Build Version
      run: xcodebuild -version

    - name: Show Build Settings
      run: xcodebuild -showBuildSettings

    - name: Show Build SDK
      run: xcodebuild -showsdks

    - name: Homebrew build helpers install
      run: |
        brew bundle

    - name: generate sources
      run: ./scripts/generate_sources.sh

    - name: build and test
      run: swift test --enable-code-coverage -v

    - name: doctest the readme
      run: swift doctest -p README.md

      #- name: env review
      #run: env

    - name: Prepare Code Coverage
      run: xcrun llvm-cov export -format="lcov" .build/debug/OpenTelemetryModelsPackageTests.xctest/Contents/MacOS/OpenTelemetryModelsPackageTests -instr-profile .build/debug/codecov/default.profdata > info.lcov

    - name: Upload to CodeCov.io
      run: bash <(curl https://codecov.io/bash)
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
